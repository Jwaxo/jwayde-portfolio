<?php

/**
 * @file
 * Functions to support theming in the Waxo Gray theme.
 */

use \Drupal\Component\Utility\Html;
use \Drupal\file\Entity\File;
use \Drupal\Core\Url;

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function waxo_gray_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  $element = $variables['element'];
  $view_mode = $element['#view_mode'];
  if (strpos($view_mode, 'layout_builder') > -1) {
    // We're in a Layout Builder component, which currently only is used for
    // fields on a full view node.
    $view_mode = 'full';
  }

  $suggestions[] = 'field__' . $view_mode;
  $suggestions[] = 'field__' . $view_mode . '__' . $element['#field_name'];
  if (isset($element['#bundle'])) {
    $suggestions[] = 'field__' . $view_mode . '__' . $element['#field_name'] . '__' . $element['#bundle'];
  }
}

/**
 * Implements template_preprocess_page().
 */
function waxo_gray_preprocess_page(&$variables) {
  // Sets the color value to be placed into the hero.
  if (isset($variables['node'])) {
    $node = $variables['node'];
    if ($node->hasField('field_color') && $node->get('field_color')->first()) {
      $variables['color_hex'] = $node->get('field_color')->first()->get('color')->getValue();
    }

    if ($node->hasField('field_footer_image')) {
      $image = [];
      $image_media = $node->get('field_footer_image');
      if ($image_media) {
        $image = _waxo_gray_get_image_from_media($image_media);
        if (!empty($image)) {
          $variables['footer_image'] = $image;
        }
      }
    }
    $variables['header_class'] = "header--" . $node->getType();
  }
}

/**
 * Implements template_preprocess_node().
 */
function waxo_gray_preprocess_node(&$variables) {
  $node = $variables['elements']['#node'];
  $bundle = $node->getType();

  $variables['attributes']['class'][] = 'node--' . $bundle;
  $variables['attributes']['class'][] = 'node--' . $variables['elements']['#view_mode'];
  $variables['attributes']['class'][] = 'node--' . $bundle . '--' . $variables['elements']['#view_mode'];
}

/**
 * Implements template_preprocess_block().
 */
function waxo_gray_preprocess_block(&$variables) {
  // Give the block an ID so we can link directly to it.
  if (!isset($variables['title_attributes']['id'])) {
    if (isset($variables['content'][0]['#title'])) {
      $variables['title_attributes']['id'] = Html::cleanCSSIdentifier($variables['content'][0]['#title']);
    }
    elseif (isset($variables['content']['#display_id'])) {
      $variables['title_attributes']['id'] = $variables['content']['#display_id'];
    }
  }
}

/**
 * Implements template_preprocess_field().
 */
function waxo_gray_preprocess_field(&$variables) {
  $field_name = $variables['element']['#field_name'];
  $formatter = $variables['element']['#formatter'];
  $bundle = $variables['element']['#bundle'];
  $entity = $variables['element']['#object'];

  if ($field_name === 'title' && $bundle === 'page') {
    // Pages use a special Hero page title style, so we need to get the image
    // and other fields to pass along.
    $image = [];
    $image_media = $entity->get('field_image');
    if ($image_media) {
      $image = _waxo_gray_get_image_from_media($image_media);
      if (!empty($image)) {
        $variables['image'] = $image;
      }
    }

    if ($subtitle = $entity->get('field_subtitle')) {
      $variables['subtitle'] = $subtitle->value;
    }
  }
}

/**
 * Take a media field and return a simple array of the image URL and ALT.
 */
function _waxo_gray_get_image_from_media($media_field) {
  $image = [];

  $media_entity = $media_field->entity;
  $file = File::load($media_entity->field_media_image->target_id);

  $image['url'] = \Drupal::service('file_url_generator')->generate($file->getFileUri());

  if (isset($image['url'])) {
    $image['alt'] = $media_entity->alt;
  }

  return $image;
}
